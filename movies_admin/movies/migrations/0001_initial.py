# Generated by Django 3.1 on 2020-10-09 19:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import movies.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.RunSQL("CREATE SCHEMA IF NOT EXISTS content;"),
        migrations.CreateModel(
            name='BaseFilmwork',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='название фильма')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание фильма')),
                ('creation_date', models.DateField(blank=True, null=True, verbose_name='дата создания')),
                ('certificate', models.TextField(blank=True, null=True, verbose_name='сертификат')),
                ('file_path', models.FileField(blank=True, null=True, upload_to='film_works/', verbose_name='файл')),
                ('rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='рейтинг')),
                ('type', models.CharField(choices=[('movie', 'фильм'), ('series', 'сериал')], max_length=20, verbose_name='тип фильма')),
                ('age_lower_limit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='возрастной ценз')),
                ('production_end_date', models.DateField(blank=True, null=True, verbose_name='дата окончания проекта')),
            ],
            options={
                'db_table': 'content"."film_work',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='название жанра')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание жанра')),
            ],
            options={
                'verbose_name': 'жанр',
                'verbose_name_plural': 'жанры',
                'db_table': 'content"."genre',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=255, verbose_name='имя')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='дата рождения')),
            ],
            options={
                'verbose_name': 'участник',
                'verbose_name_plural': 'участники',
                'db_table': 'content"."person',
            },
        ),
        migrations.CreateModel(
            name='PersonRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('director', 'режиссёр'), ('actor', 'актёр'), ('writer', 'сценарист')], max_length=30, verbose_name='роль')),
                ('created', models.DateField(blank=True, default=movies.models.now, editable=False, verbose_name='дата создания роли')),
                ('film_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.basefilmwork')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.person')),
            ],
            options={
                'db_table': 'content"."person_film_work',
                'unique_together': {('role', 'film_work', 'person')},
            },
        ),
        migrations.CreateModel(
            name='GenreMovie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateField(blank=True, default=movies.models.now, editable=False, verbose_name='дата создания роли')),
                ('film_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.basefilmwork')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.genre')),
            ],
            options={
                'db_table': 'content"."genre_film_work',
                'unique_together': {('genre', 'film_work')},
            },
        ),
        migrations.AddField(
            model_name='basefilmwork',
            name='genres',
            field=models.ManyToManyField(blank=True, through='movies.GenreMovie', to='movies.Genre'),
        ),
        migrations.AddField(
            model_name='basefilmwork',
            name='persons',
            field=models.ManyToManyField(blank=True, through='movies.PersonRole', to='movies.Person'),
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
            ],
            options={
                'verbose_name': 'фильм',
                'verbose_name_plural': 'фильмы',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('movies.basefilmwork',),
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
            ],
            options={
                'verbose_name': 'сериал',
                'verbose_name_plural': 'сериалы',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('movies.basefilmwork',),
        ),
    ]
